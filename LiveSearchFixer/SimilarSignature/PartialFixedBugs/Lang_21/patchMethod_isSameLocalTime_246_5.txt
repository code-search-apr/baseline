//**********************************************************
//  eclipse_nebula:org.eclipse.nebula.widgets.ganttchart:GanttSpecialDateRange:canEventOccupy:Calendar#start#Calendar#end:boolean
//**********************************************************
/**
     * <p>Checks if two calendar objects represent the same local time.</p>
     *
     * <p>This method compares the values of the fields of the two objects.
     * In addition, both calendars must be the same of the same type.</p>
     * 
     * @param cal1  the first calendar, not altered, not null
     * @param cal2  the second calendar, not altered, not null
     * @return true if they represent the same millisecond instant
     * @throws IllegalArgumentException if either date is <code>null</code>
     * @since 2.1
     */
    public static boolean isSameLocalTime(final Calendar start, final Calendar end) {
    	if (isAllowEventsOnDates()) {
    		return true;
    	}
    	
    	// we're not in range, check this first as it's faster
    	if (!isVisible(start, end)) {
    		return true;
    	}
    	
    	// get all blocks that we occupy
    	List blocks = getBlocks(start, end);
    	
    	DateRange us = new DateRange(_start, _end);
    	
    	for (int i = 0; i < blocks.size(); i++) {
    		ArrayList block = (ArrayList) blocks.get(i);
    		
    		Calendar blockStart = (Calendar) block.get(0);
    		Calendar blockEnd = (Calendar) block.get(1);
    		
    		DateRange range = new DateRange(blockStart, blockEnd);    		
    		if (us.Overlaps(range)) {
    			return false;
    		}
    	}
    	
    	return true;
    }
