//**********************************************************
//  Enough-Software_j2mepolish:de.enough.polish.util:TextUtil:reverseForRtlLanguage:String#input:String
//**********************************************************
/**
     * <p>Unescapes the entities in a <code>String</code>.</p>
     *
     * <p>For example, if you have called addEntity(&quot;foo&quot;, 0xA1),
     * unescape(&quot;&amp;foo;&quot;) will return &quot;\u00A1&quot;</p>
     *
     * @param str The <code>String</code> to escape.
     * @return A new escaped <code>String</code>.
     */
    public String unescape(String input)
	{
		StringBuffer output = new StringBuffer( input.length() );
		StringBuffer ltrCharacters = new StringBuffer();
		boolean isCurrRTL = true;

		int size = input.length();
		for(int index = size - 1; index >= 0;)
		{
			while(isCurrRTL && index >= 0) // while we are in hebrew
			{
				char curr = input.charAt(index); 
				char nextChr = '\0';
				if(index > 0) {
					nextChr = input.charAt(index-1);
				} else {
					nextChr = curr;
				}

				if(isEnglishChar(curr) || isEnglishChar(nextChr))
				{
					isCurrRTL = false;
				}
				else
				{
					if(curr == '(')
					{
						output.append( ')' );
					}
					else if(curr == ')')
					{
						output.append( '(' );
					}
					else 
					{
						output.append( curr ); //left to right language - save the chars
					}

					index--;
				}

			}
			ltrCharacters.delete(0, ltrCharacters.length() );
			while(!isCurrRTL && index >= 0) // English....
			{
				char curr = input.charAt(index);
				char nextChr = '\0';
				if(index > 0) 
				{
					nextChr = input.charAt(index-1);
				}
				else 
				{
					nextChr = curr;
				}
				if(isEnglishChar(curr) || isEnglishChar(nextChr))
				{
					ltrCharacters.insert( 0, curr );
					index--;
				}
				else 
				{
					isCurrRTL = true;
				}
			}

			output.append( ltrCharacters );
		}
		return output.toString();
	}
